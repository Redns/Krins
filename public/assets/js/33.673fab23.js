(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{573:function(t,s,a){"use strict";a.r(s);var n=a(12),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_1-基本原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本原理"}},[t._v("#")]),t._v(" 1 基本原理")]),t._v(" "),a("h2",{attrs:{id:"_1-1-结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-结构"}},[t._v("#")]),t._v(" 1.1 结构")]),t._v(" "),a("p",[t._v("光电编码器由三个部分组成："),a("code",[t._v("发光二极管")]),t._v("，"),a("code",[t._v("码盘")]),t._v("以及码盘背面的"),a("code",[t._v("光传感器")]),t._v("。结构示意图如下所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/Redns/Notebook/master/Image/20201209132141582.png?token=AQOTG4HOOR4ULOOXDVITRGLB4FWTG",alt:"在这里插入图片描述"}})]),t._v(" "),a("br"),t._v(" "),a("h3",{attrs:{id:"_1-1-1-测速原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-1-测速原理"}},[t._v("#")]),t._v(" 1.1.1 测速原理")]),t._v(" "),a("p",[t._v("码盘安装在旋转轴上，上面均匀地排列着透光和不透光的扇形区域。当码盘转动时，不透光的部分能够挡住光线，而透光区则允许光线透过，那么码盘背面的光传感器就会周期性地收到光信号，从而输出一列方波。根据单位时间内方波的周期数，就能粗略估计出运动的速度！")]),t._v(" "),a("br"),t._v(" "),a("h3",{attrs:{id:"_1-1-2-速度计算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-2-速度计算"}},[t._v("#")]),t._v(" 1.1.2 速度计算")]),t._v(" "),a("p",[t._v("我们知道，码盘转动一周时，光传感器输出的"),a("code",[t._v("脉冲个数")]),t._v("是一定的，通过检测一定时间内收到的脉冲个数，就可以知道在这段时间内码盘转动了多少圈，进而换算为速度。例如，一个码盘转动一周时会输出100个脉冲，在0.1s内我们收到了500个脉冲，这意味着0.1s内码盘转动了5周，即码盘的转速为50r/s。")]),t._v(" "),a("br"),t._v(" "),a("h3",{attrs:{id:"_1-1-3-运动方向"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-3-运动方向"}},[t._v("#")]),t._v(" 1.1.3 运动方向")]),t._v(" "),a("blockquote",[a("p",[t._v("但是，还有一个问题。设想，如果编码器只输出一列方波（假设为A），我们该怎样判断码盘是正转还是反转？因为无论是正转还是反转，都会产生同样的方波，而它们对速度的贡献显然是相反的！接下来我们看一看这个问题该怎样解决：")])]),t._v(" "),a("p",[t._v("上面我们已经说过，码盘上均匀地刻着透光和不透光的扇形区域，我们在这一圈扇形区域内再均匀地刻上一圈透光和不透光的扇形区域，不同的是，外圈和内圈的区域是"),a("code",[t._v("交错")]),t._v("的。也就是说，当外圈处于"),a("code",[t._v("不透光区域")]),t._v("时，内圈对应的一半为"),a("code",[t._v("透光区域")]),t._v("，一半为"),a("code",[t._v("不透光区域")]),t._v("；当外圈处于"),a("code",[t._v("透光区域")]),t._v("时，内圈对应的一半为"),a("code",[t._v("不透光区域")]),t._v("，一半为"),a("code",[t._v("透光区域")]),t._v("。于是，当码盘转动时编码器会输出两列"),a("code",[t._v("相位差为90°方波")]),t._v("，波形如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/Redns/Notebook/master/Image/20201209132240245.png?token=AQOTG4BKM5OG2O7YIOE5SODB4FXRE",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[t._v("下面左图为"),a("code",[t._v("正转")]),t._v("时的波形，右图为"),a("code",[t._v("反转")]),t._v("时的波形")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/Redns/Notebook/master/Image/20201209132258975.png?token=AQOTG4BLB3KNGAAAOLZWC73B4FXTG",alt:""}})]),t._v(" "),a("ul",[a("li",[a("p",[t._v("当码盘正转时，在方波A的上升沿，方波B恒为低电平；当码盘反转时，在方波A的上升沿，方波B恒为高电平。通过判断A处于上升沿时，B的电平状态就可以方便地知道码盘旋转的方向。")])]),t._v(" "),a("li",[a("p",[t._v("不同型号的编码器，码盘旋转一周输出的"),a("code",[t._v("脉冲个数")]),t._v("是不同的，我使用的编码器码盘旋转一周输出的脉冲个数为 90，小车轮子的直径为75mm 。假如我们在时间T内统计到的有效脉冲数目为S（正转脉冲数+1，反转脉冲数-1），小车轮子的直径为D，圆周率为pi（约为3.14），那么小车的速度换算公式如下：")])])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("$V = \\frac{\\pi SD}{90T}$")])])]),t._v(" "),a("tbody")]),t._v(" "),a("br"),t._v(" "),a("p",[t._v("例如，我们每隔1 s统计一次有效脉冲数目，某一次得到的有效脉冲数目为500，那么小车此时的速度为：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("$v = \\frac{3.14 * 500 * 75 * 10^{-3}}{90 * 1}  ≈  1.31 m/s$")])])]),t._v(" "),a("tbody")]),t._v(" "),a("br"),t._v(" "),a("h3",{attrs:{id:"_1-1-4-实现思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-4-实现思路"}},[t._v("#")]),t._v(" 1.1.4 实现思路")]),t._v(" "),a("p",[t._v("我们可以看出，问题的关键在于，如何统计一定时间内的脉冲数目？目前有两种思路：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("利用"),a("code",[t._v("中断")]),t._v("检测A的上升沿，触发中断时判断B的电平，来决定计数值加还是减；")])]),t._v(" "),a("li",[a("p",[t._v("将定时器设置为"),a("code",[t._v("编码器模式")]),t._v("，直接读取计数值和方向。")])])]),t._v(" "),a("br"),t._v(" "),a("h1",{attrs:{id:"_2-代码实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-代码实现"}},[t._v("#")]),t._v(" 2 代码实现")]),t._v(" "),a("h2",{attrs:{id:"_2-1-中断-电平检测"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-中断-电平检测"}},[t._v("#")]),t._v(" 2.1 中断 + 电平检测")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("打开"),a("code",[t._v("STM32CubeMX")]),t._v("，设置相关管脚，我这里使用的是"),a("code",[t._v("PC2")]),t._v("和"),a("code",[t._v("PC3")]),t._v("来接A、B相\n"),a("img",{attrs:{src:"https://raw.githubusercontent.com/Redns/Notebook/master/Image/20201209173933217.png?token=AQOTG4FYPYW7SEIMWB4MIJDB4FZEI",alt:"在这里插入图片描述"}})])]),t._v(" "),a("li",[a("p",[t._v("为方便观察，打开"),a("code",[t._v("UART串口")]),t._v("，从串口读取采集到的数据\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20201209174013660.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NlZ2Fu,size_16,color_FFFFFF,t_70#pic_center",alt:"在这里插入图片描述"}})])])]),t._v(" "),a("br"),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("打开"),a("code",[t._v("定时器2")]),t._v("，定时器响应时通过UART串口把计数值打印出来，计时"),a("code",[t._v("200ms")]),t._v(" "),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20201209174043587.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NlZ2Fu,size_16,color_FFFFFF,t_70#pic_center",alt:"在这里插入图片描述"}})])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/Redns/Notebook/master/Image/image-20220114205350416.png?token=AQOTG4ARIZW5SUXTKAIN663B4FZJS",alt:""}})]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("导入"),a("code",[t._v("STM32Cube")]),t._v("工程")])]),t._v(" "),a("p",[a("strong",[t._v("定义相关变量")])]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" COUNT "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//用来计数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" str_buff"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" point"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" speed "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("               "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//速度")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//flag=0时计数，flag=1时清零")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("br"),t._v(" "),a("p",[a("strong",[t._v("重写中断回调函数")])]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_GPIO_EXTI_Callback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint16_t")]),t._v(" GPIO_Pin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GPIO_Pin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" GPIO_PIN_2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      COUNT "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_GPIO_ReadPin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GPIOC"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" GPIO_PIN_3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        COUNT"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        COUNT"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br")])]),a("br"),t._v(" "),a("p",[a("strong",[t._v("定时器响应后通过UART串口发送数据")])]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_TIM_PeriodElapsedCallback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TIM_HandleTypeDef "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("htim"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("htim"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("Instance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" TIM2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      speed "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("COUNT "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.14")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.14")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("34")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//cm/s")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sprintf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str_buff"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"speed:%dcm/s\\r\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("speed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_UART_Transmit_IT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("huart1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint8_t")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("str_buff"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str_buff"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br")])]),a("br"),t._v(" "),a("p",[a("strong",[t._v("在主函数中打开定时器2")])]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_TIM_Base_Start_IT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("htim2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ol",{attrs:{start:"5"}},[a("li",[t._v("测试效果如图：")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20201209174833829.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NlZ2Fu,size_16,color_FFFFFF,t_70#pic_center",alt:"在这里插入图片描述"}})]),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"_2-2-编码器模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-编码器模式"}},[t._v("#")]),t._v(" 2.2 编码器模式")]),t._v(" "),a("ol",[a("li",[t._v("选择"),a("code",[t._v("TIM4")]),t._v("，设置"),a("code",[t._v("Combined Channels")]),t._v("为"),a("code",[t._v("Encoder Mode")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/Redns/Notebook/master/Image/image-20220114205743026.png?token=AQOTG4HSLXYANEMEGT5TY2LB4FZYC",alt:"image-20220114205743026"}})]),t._v(" "),a("br"),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("配置编码模式")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/Redns/Notebook/master/Image/image-20220114205901673.png?token=AQOTG4AUZKSD5UEFJ5HX4YTB4FZ5A",alt:"image-20220114205901673"}})]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("Prescaler")]),t._v("：分频系数")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Counter Mode")]),t._v("：计数模式，设置为UP代表码盘正转时计数值增加，反转时计数值减小")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Counter Period")]),t._v("：当编码器计数值等于该值时，计数值会清零，一般设置为65535")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Encoder Mode")]),t._v("：计数模式，编码器计数有三种模式可选")]),t._v(" "),a("ol",[a("li",[a("p",[a("code",[t._v("T1")]),t._v("：只在上升沿计数，例如在一定时间内A产生了100个脉冲，那么编码器计数值为200（A、B产生脉冲数相等），由于分频系数的存在，实际调用函数得到的计数值为200 / ( Prescaler + 1 )")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("T2")]),t._v("：只在下降沿计数，计数值与T1相等( Prescaler相等的情况下）")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("TI and T2")]),t._v("：在上升沿、下降沿都计时，计数值为T1的两倍( Prescaler相等的情况下）")])])])])]),t._v(" "),a("br"),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("导入"),a("code",[t._v("CubeMx")]),t._v("工程")])]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//定义相关变量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint8_t")]),t._v(" GetData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//编码器计数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint8_t")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint8_t")]),t._v(" Direction"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//编码器方向")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//打开定时器模式")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_TIM_Encoder_Start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("htim4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TIM_CHANNEL_ALL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//读取相关值并通过OLED显示出来")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \n    GetData "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("__HAL_TIM_GET_COUNTER")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("htim4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Direction "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("__HAL_TIM_IS_TIM_COUNTING_DOWN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("htim4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sprintf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fre:%4d dir:%d"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("GetData"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Direction"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OLED_Clear")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OLED_ShowString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("__HAL_TIM_SET_COUNTER")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("htim4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_Delay")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* USER CODE END WHILE */")]),t._v("\n​\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* USER CODE BEGIN 3 */")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br")])]),a("br"),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("实际效果")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/Redns/Notebook/master/Image/image-20220114210332904.png?token=AQOTG4EGKGRXHYD7KSBTIHLB4F2OU",alt:"image-20220114210332904"}})])])}),[],!1,null,null,null);s.default=e.exports}}]);